String.prototype.rightChars = function (t) { return 0 >= t ? "" : t > this.length ? this : this.substring(this.length, this.length - t) }, function (t) { var r, e, n, i, o, a, p, s, h, u, g, l, y = { highlightSpeed: 20, typeSpeed: 50, clearDelay: 1500, typeDelay: 200, clearOnHighlight: !0, typerDataAttr: "data-typer-targets", typerInterval: 1e3 }; i = function (r, e) { return "rgba(0, 0, 0, 0)" === r && (r = "rgb(0, 0, 0)"), t("<span></span>").css("color", r).css("background-color", e) }, s = function (t) { return !isNaN(parseFloat(t)) && isFinite(t) }, p = function (t) { t.removeData(["typePosition", "highlightPosition", "leftStop", "rightStop", "primaryColor", "backgroundColor", "text", "typing"]) }, n = function (t) { var r = t.data("text"), e = t.data("oldLeft"), i = t.data("oldRight"); return r && 0 !== r.length ? (t.text(e + r.charAt(0) + i).data({ oldLeft: e + r.charAt(0), text: r.substring(1) }), void setTimeout(function () { n(t) }, g())) : void p(t) }, e = function (t) { t.find("span").remove(), setTimeout(function () { n(t) }, a()) }, r = function (t) { var n, a, p, h = t.data("highlightPosition"); return s(h) || (h = t.data("rightStop") + 1), h <= t.data("leftStop") ? void setTimeout(function () { e(t) }, o()) : (n = t.text().substring(0, h - 1), a = t.text().substring(h - 1, t.data("rightStop") + 1), p = t.text().substring(t.data("rightStop") + 1), t.html(n).append(i(t.data("backgroundColor"), t.data("primaryColor")).append(a)).append(p), t.data("highlightPosition", h - 1), void setTimeout(function () { return r(t) }, u())) }, h = function (r) { var e; if (!r.data("typing")) { try { e = JSON.parse(r.attr(t.typer.options.typerDataAttr)).targets } catch (n) { } "undefined" == typeof e && (e = t.map(r.attr(t.typer.options.typerDataAttr).split(","), function (r) { return t.trim(r) })), r.typeTo(e[Math.floor(Math.random() * e.length)]) } }, t.typer = function () { return { options: y } }(), t.extend(t.typer, { options: y }), t.fn.typer = function () { var r = t(this); return r.each(function () { var r = t(this); "undefined" != typeof r.attr(t.typer.options.typerDataAttr) && (h(r), setInterval(function () { h(r) }, l())) }) }, t.fn.typeTo = function (e) { var n = t(this), i = n.text(), o = 0, a = 0; if (i === e) return n; if (i !== n.html()) return n; for (n.data("typing", !0) ; i.charAt(o) === e.charAt(o) ;) o++; for (; i.rightChars(a) === e.rightChars(a) ;) a++; return e = e.substring(o, e.length - a + 1), n.data({ oldLeft: i.substring(0, o), oldRight: i.rightChars(a - 1), leftStop: o, rightStop: i.length - a, primaryColor: n.css("color"), backgroundColor: n.css("background-color"), text: e }), r(n), n }, u = function () { return t.typer.options.highlightSpeed }, g = function () { return t.typer.options.typeSpeed }, o = function () { return t.typer.options.clearDelay }, a = function () { return t.typer.options.typeDelay }, l = function () { return t.typer.options.typerInterval } }(jQuery), $(".type-once").typeTo("Testing Typer.js jQuery Plugin with a 1 time text string."), $("[data-typer-targets]").typer({ highlightSpeed: 2660, typeSpeed: 8600, clearDelay: 6500, typeDelay: 6200, clearOnHighlight: !1, typerDataAttr: "data-typer-targets", typerInterval: 2e3 });